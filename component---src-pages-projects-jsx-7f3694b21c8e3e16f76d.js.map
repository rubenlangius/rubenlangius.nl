{"version":3,"sources":["webpack:///./src/components/Header.jsx","webpack:///./src/components/Inline.jsx","webpack:///./src/pages/projects.jsx"],"names":["Header","children","props","as","HeaderName","variant","mb","HeaderTitle","aria-hidden","Inline","gap","sx","items","React","Children","toArray","flexWrap","marginRight","marginBottom","map","child","index","key","display","ProjectsPage","projects","allProjectsJson","edges","Layout","mt","columns","node","title","description","website","repo","position","alignItems","right","color","userSelect","href","maxWidth","marginTop"],"mappings":"kRAIA,IAAMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,E,oIAAhB,wBACb,wBAAC,IAAD,eAAKC,GAAG,UAAaD,GACnB,wBAAC,IAAD,KAAYD,KAQVG,EAAa,SAACF,GAAD,OACjB,wBAAC,IAAD,eAASC,GAAG,KAAKE,QAAQ,kBAAkBC,GAAI,GAAOJ,KAGlDK,EAAc,SAACL,GAAD,OAClB,wBAAC,IAAD,eAAMG,QAAQ,eAAeG,eAAA,GAAgBN,M,+2BCf/C,IAmCeO,EAnCA,SAAC,GAAyC,IAAD,IAAtCC,WAAsC,MAAhC,EAAgC,EAA7BC,EAA6B,EAA7BA,GAAIV,EAAyB,EAAzBA,SAAaC,E,oIAAY,4BAChDU,EAAQC,UAAMC,SAASC,QAAQd,GAErC,OACE,wBAAC,IAAD,eACEU,GAAE,GACAK,SAAU,OACVC,aAAcP,EACdQ,cAAeR,GACZC,IAEDT,GAEHU,EAAMO,KAAI,SAACC,EAAOC,GAAR,OACT,wBAAC,IAAD,CACEC,IAAKD,EACLV,GAAI,CACFY,QAAS,eACTN,YAAaP,EACbQ,aAAcR,IAGfU,Q,YCiEII,UAnFM,WACnB,IAeMC,EAfI,OAeYC,gBAAgBC,MAEtC,OACE,wBAACC,EAAA,EAAD,KACE,wBAAC,IAAD,KACE,kDAGF,wBAAC5B,EAAA,EAAD,KACE,wBAACA,EAAA,EAAD,iBAEA,wBAACA,EAAA,EAAD,qCAGF,wBAAC,IAAD,CAAWG,GAAG,OAAO0B,GAAI,GACvB,wBAAC,IAAD,CAAMC,QAAS,CAAC,KAAM,GAAIpB,IAAK,GAC5Be,EAASN,KAAI,WAAWE,GAAW,IAAnBU,EAAkB,EAAlBA,KACPC,EAAsCD,EAAtCC,MAAOC,EAA+BF,EAA/BE,YAAaC,EAAkBH,EAAlBG,QAASC,EAASJ,EAATI,KACrC,OACE,wBAAC,IAAD,CACEb,IAAKU,EACLrB,GAAI,CAAEyB,SAAU,WAAYC,WAAY,aAExC,wBAAC,IAAD,CACE7B,eAAA,EACAH,QAAQ,UACRM,GAAI,CACFyB,SAAU,CAAC,KAAM,KAAM,YACvBE,MAAO,OACPrB,YAAa,EACbsB,MAAO,aACPC,WAAY,SAGbnB,EAAQ,GAGX,wBAAC,IAAD,KACE,wBAAC,IAAD,KACE,wBAAC,IAAD,CAAMhB,QAAQ,KAAKoC,KAAMP,GAAWC,GACjCH,IAIJC,GACC,wBAAC,IAAD,CAAM9B,GAAG,IAAIQ,GAAI,CAAE+B,SAAU,UAAWC,UAAW,IAChDV,GAIL,wBAAC,EAAD,CAAQvB,IAAK,EAAGmB,GAAI,GACjBK,GAAW,wBAAC,IAAD,CAAMO,KAAMP,GAAZ,WAEXA,GAAWC,GAAQ,IAEnBA,GAAQ,wBAAC,IAAD,CAAMM,KAAMN,GAAZ,yB","file":"component---src-pages-projects-jsx-7f3694b21c8e3e16f76d.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Text, Container, Heading } from 'theme-ui'\n\nconst Header = ({ children, ...props }) => (\n  <Box as=\"header\" {...props}>\n    <Container>{children}</Container>\n  </Box>\n)\n\nHeader.propTypes = {\n  children: PropTypes.node,\n}\n\nconst HeaderName = (props) => (\n  <Heading as=\"h1\" variant=\"section-heading\" mb={1} {...props} />\n)\n\nconst HeaderTitle = (props) => (\n  <Text variant=\"header-title\" aria-hidden {...props} />\n)\n\nexport { Header, HeaderName, HeaderTitle }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Flex } from 'theme-ui'\n\nconst Inline = ({ gap = 0, sx, children, ...props }) => {\n  const items = React.Children.toArray(children)\n\n  return (\n    <Flex\n      sx={{\n        flexWrap: 'wrap',\n        marginRight: -gap,\n        marginBottom: -gap,\n        ...sx,\n      }}\n      {...props}\n    >\n      {items.map((child, index) => (\n        <Box\n          key={index}\n          sx={{\n            display: 'inline-block',\n            marginRight: gap,\n            marginBottom: gap,\n          }}\n        >\n          {child}\n        </Box>\n      ))}\n    </Flex>\n  )\n}\n\nInline.propTypes = {\n  gap: PropTypes.number,\n  sx: PropTypes.object,\n  children: PropTypes.node,\n}\n\nexport default Inline\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { Box, Flex, Grid, Text, Container, Heading, Link } from 'theme-ui'\nimport Layout from '../components/Layout'\nimport Inline from '../components/Inline'\nimport { Header, HeaderName, HeaderTitle } from '../components/Header'\n\nconst ProjectsPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allProjectsJson {\n        edges {\n          node {\n            title\n            description\n            website\n            repo\n          }\n        }\n      }\n    }\n  `)\n\n  const projects = data.allProjectsJson.edges\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>Projects</title>\n      </Helmet>\n\n      <Header>\n        <HeaderName>Projects</HeaderName>\n\n        <HeaderTitle>First-World Problem Solvers</HeaderTitle>\n      </Header>\n\n      <Container as=\"main\" mt={5}>\n        <Grid columns={[null, 2]} gap={5}>\n          {projects.map(({ node }, index) => {\n            const { title, description, website, repo } = node\n            return (\n              <Flex\n                key={title}\n                sx={{ position: 'relative', alignItems: 'baseline' }}\n              >\n                <Text\n                  aria-hidden\n                  variant=\"heading\"\n                  sx={{\n                    position: [null, null, 'absolute'],\n                    right: '100%',\n                    marginRight: 3,\n                    color: 'muted-text',\n                    userSelect: 'none',\n                  }}\n                >\n                  {index + 1}\n                </Text>\n\n                <Box>\n                  <Heading>\n                    <Link variant=\"ui\" href={website || repo}>\n                      {title}\n                    </Link>\n                  </Heading>\n\n                  {description && (\n                    <Text as=\"p\" sx={{ maxWidth: 'measure', marginTop: 2 }}>\n                      {description}\n                    </Text>\n                  )}\n\n                  <Inline gap={2} mt={2}>\n                    {website && <Link href={website}>Website</Link>}\n\n                    {website && repo && '\\u00B7'}\n\n                    {repo && <Link href={repo}>Repository</Link>}\n                  </Inline>\n                </Box>\n              </Flex>\n            )\n          })}\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n"],"sourceRoot":""}