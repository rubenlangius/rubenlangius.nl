{"version":3,"sources":["webpack:///./node_modules/unfetch/dist/unfetch.mjs","webpack:///./src/utils/getStats.js","webpack:///./src/pages/index.jsx","webpack:///./node_modules/gatsby/node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["n","Promise","t","r","s","XMLHttpRequest","o","u","i","l","open","method","e","onload","getAllResponseHeaders","replace","push","toLowerCase","a","ok","status","statusText","url","responseURL","text","resolve","responseText","json","JSON","parse","blob","Blob","response","clone","headers","keys","entries","get","has","onerror","withCredentials","credentials","setRequestHeader","send","body","getStats","fetch","stringify","query","Error","data","console","error","message","IndexPage","stats","React","useState","commits","setCommits","tweets","setTweets","steps","setSteps","places","setPlaces","songs","setSongs","album","setAlbum","books","setBooks","hydrateStats","commitStat","tweetsStat","placesStat","stepsStat","songsStat","albumStat","booksStat","name","artist","length","useEffect","Layout","variant","mb","sx","display","as","fontWeight","href","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","result","__await","then","unwrapped","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-index-jsx-2bdab7f050e7b6438022.js","sourcesContent":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function (e, n) {\n  return n = n || {}, new Promise(function (t, r) {\n    var s = new XMLHttpRequest(),\n        o = [],\n        u = [],\n        i = {},\n        a = function a() {\n      return {\n        ok: 2 == (s.status / 100 | 0),\n        statusText: s.statusText,\n        status: s.status,\n        url: s.responseURL,\n        text: function text() {\n          return Promise.resolve(s.responseText);\n        },\n        json: function json() {\n          return Promise.resolve(JSON.parse(s.responseText));\n        },\n        blob: function blob() {\n          return Promise.resolve(new Blob([s.response]));\n        },\n        clone: a,\n        headers: {\n          keys: function keys() {\n            return o;\n          },\n          entries: function entries() {\n            return u;\n          },\n          get: function get(e) {\n            return i[e.toLowerCase()];\n          },\n          has: function has(e) {\n            return e.toLowerCase() in i;\n          }\n        }\n      };\n    };\n\n    for (var l in s.open(n.method || \"get\", e, !0), s.onload = function () {\n      s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, function (e, n, t) {\n        o.push(n = n.toLowerCase()), u.push([n, t]), i[n] = i[n] ? i[n] + \",\" + t : t;\n      }), t(a());\n    }, s.onerror = r, s.withCredentials = \"include\" == n.credentials, n.headers) {\n      s.setRequestHeader(l, n.headers[l]);\n    }\n\n    s.send(n.body || null);\n  });\n}","import fetch from 'unfetch'\n\nconst getStats = async () => {\n  const query = `\n      query Stats {\n        commits\n        tweets\n        places\n        steps\n        songs\n        album {\n          name\n          artist\n        }\n        books {\n          name\n          author\n        }\n      }\n  `\n\n  try {\n    const response = await fetch('https://stats.lowmess.com/graphql', {\n      method: 'POST',\n      body: JSON.stringify({ query }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n\n    if (!response.ok) {\n      throw new Error(`${response.status}: ${response.statusText}`)\n    }\n\n    const { data } = await response.json()\n\n    return data\n  } catch (error) {\n    console.error(error.message ? error.message : error)\n    return false\n  }\n}\n\nexport default getStats\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { Text, Heading, Link, Container } from 'theme-ui'\nimport Layout from '../components/Layout'\nimport getStats from '../utils/getStats'\nimport pluralize from '../utils/pluralize'\n\nconst ValueCount = ({ value, singular, plural }) => (\n  <React.Fragment>\n    {value.toLocaleString()} {pluralize(value, singular, plural)}\n  </React.Fragment>\n)\n\nValueCount.propTypes = {\n  value: PropTypes.number.isRequired,\n  singular: PropTypes.string.isRequired,\n  plural: PropTypes.string.isRequired,\n}\n\nconst BookType = PropTypes.shape({\n  name: PropTypes.string,\n  author: PropTypes.string,\n})\n\nconst FormattedBook = ({ book }) => (\n  <React.Fragment>\n    &ldquo;{book.name}&rdquo; by {book.author}\n  </React.Fragment>\n)\n\nFormattedBook.propTypes = {\n  book: BookType,\n}\n\nconst BooksToSentence = ({ books }) => {\n  if (books.length === 1) return <FormattedBook book={books[0]} />\n\n  if (books.length === 2)\n    return (\n      <React.Fragment>\n        <FormattedBook book={books[0]} /> and <FormattedBook book={books[1]} />\n      </React.Fragment>\n    )\n\n  return books.map((book, index) => {\n    if (index === 0) return <FormattedBook book={book} />\n\n    if (index + 1 === books.length)\n      return (\n        <React.Fragment>\n          , and <FormattedBook book={book} />\n        </React.Fragment>\n      )\n\n    return (\n      <React.Fragment key={book.name}>\n        , <FormattedBook book={book} />\n      </React.Fragment>\n    )\n  })\n}\n\nBooksToSentence.propTypes = {\n  books: PropTypes.arrayOf(BookType),\n}\n\nconst IndexPage = () => {\n  const { stats } = useStaticQuery(graphql`\n    query IndexPage {\n      stats {\n        commits\n        tweets\n        steps\n        places\n        songs\n        album {\n          name\n          artist\n        }\n        books {\n          name\n          author\n        }\n      }\n    }\n  `)\n\n  const [commits, setCommits] = React.useState(stats.commits)\n  const [tweets, setTweets] = React.useState(stats.tweets)\n  const [steps, setSteps] = React.useState(stats.steps)\n  const [places, setPlaces] = React.useState(stats.places)\n  const [songs, setSongs] = React.useState(stats.songs)\n  const [album, setAlbum] = React.useState(stats.album)\n  const [books, setBooks] = React.useState(stats.books)\n\n  const hydrateStats = async () => {\n    const {\n      commits: commitStat,\n      tweets: tweetsStat,\n      places: placesStat,\n      steps: stepsStat,\n      songs: songsStat,\n      album: albumStat,\n      books: booksStat,\n    } = await getStats()\n\n    if (typeof commitStat === 'number') setCommits(commitStat)\n\n    if (typeof tweetsStat === 'number') setTweets(tweetsStat)\n\n    if (typeof placesStat === 'number') setPlaces(placesStat)\n\n    if (typeof stepsStat === 'number') setSteps(stepsStat)\n\n    if (typeof songsStat === 'number') setSongs(songsStat)\n\n    if (albumStat?.name && albumStat?.artist) setAlbum(albumStat)\n\n    if (booksStat.length > 0) setBooks(booksStat)\n  }\n\n  React.useEffect(() => {\n    hydrateStats()\n  }, [])\n\n  return (\n    <Layout>\n      <Container>\n        <Text variant=\"section-heading\" mb={3}>\n          Introduction\n        </Text>\n\n        {/* The `Text` wrapper makes sure spaces are consistently sized */}\n        <Text variant=\"site-intro\" sx={{ display: 'contents' }}>\n          <Heading as=\"h1\" variant=\"site-intro\" sx={{ fontWeight: 'bold' }}>\n            Hi, I'm Ruben Langius, and I like to build things.\n          </Heading>{' '}<br />\n          <Heading as=\"h2\" variant=\"site-intro-description\">\n            Currently, I&rsquo;m helping <Link href=\"https://belsimpel.nl\">Belsimpel</Link> as a lead web developer.{' '}\n          </Heading>{' '}\n          <Text as=\"p\" variant=\"site-intro-description\">\n            With a BSc in Artificial Intelligence and my experience as a web developer I can train a \n            neural network, design a website, build a website, build an app, and if you’re lucky I’ll even write your back-end code; Full Stack!\n            Now besides this digital craftsmanship, nothing makes me happier then building something physical with my own hands, have a look at my latest{' '}\n            <Link href=\"https://www.instagram.com/rubenonaboat/\">\n              project. \n            </Link>\n          </Text>\n        </Text>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}"],"sourceRoot":""}